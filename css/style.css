
.btn-selected {
    /* Style for selected button */
    border: 2px solid #CCC;
    border-radius: 50%;
    padding: 8px;
    transition: transform 0.3s;
}

.btn-selected:hover {

    /* Remove on hover effect */
    transform: scale(1) !important;
     /* !important flag added to stop Tailwind from overriding */
     
}

/*  CSS EQUIVALENTS OF TAILWIND CLASSES

        .py-4 {
                padding-top: 1rem;
                padding-bottom: 1rem;
            }

        .px-20 {
                    padding-left: 5rem;
                    padding-right: 5rem;
                }

        .bg-gray-700 
         hover:bg-gray-600 {

            background-color: #374151; /* For bg-gray-700 

            transition: background-color 0.2s; /* Smooth transition effect for hover 

            /* Hover state 
            &:hover {
                background-color: #4B5563; /* For hover:bg-gray-600 
            }
        
        }

        .text-white {
                        color: #ffffff;
                     }


        .rounded-lg {
                        border-radius: 0.5rem; 
                            /* Applies a large border radius (0.5rem or 8px) for 
                                rounded corners.
        }

        .transition-colors {

                    transition: color 0.2s, 
                                background-color 0.2s, 
                                border-color 0.2s;
                                /* Ensures smooth color transitions for the properties

        }


        .space-x-4 {
                        display: flex; /* or grid 
                        column-gap: 1rem; 
                            /* Adds horizontal spacing of 1rem (16px) between child elements.
                               This uses the gap property in Flexbox or Grid layouts. 
                    }

        .w-12 {
                width: 3rem; /* 48px 
            }


        .w-22 {
                width: 5.5rem; /* 88px 
            }


        .my-8 {
                    margin-top: 2rem; 
                    margin-bottom: 2rem; 
                        /* Sets the top and bottom margin to 2rem (32px). 
              }

        .mb-2 {
                    margin-bottom: 0.5rem; 
                        /* Sets the bottom margin to 0.5rem (8px). 

              }

        .transition-transform {

                    transition-property: transform;
                        /* Applies a transition effect specifically for transformations 
                            (like scaling or rotating). 

                }

        .duration-300 {

                    transition-duration: 300ms; 
                        /* Sets the duration of the transition to 300ms (0.3 seconds). 

                }

        .hover:scale-110 {

                /* Default state 
                transform: scale(1);

                .element:hover {
                    transform: scale(1.10);
                }
                    /* On hover, scales the element to 1.1 times its original size (110%). 
        }

        .text-xl {
                    font-size: 1.25rem; /* 20px 
                    line-height: 1.75rem; /* 28px 
                 }

        .text-5xl {
                    font-size: 3rem; /* 48px 
                    line-height: 1; /* 1 
                }

        .mb-5 {
                    margin-bottom: 1.25rem; /* 20px 
              }

        .font-light {
                        font-weight: 300;
                            /* Sets the font weight to 300 (light).
                    }

        .sticky {
                    position: sticky; 
                        /* A hybrid between relative and fixed positioning. 

                            The element will scroll normally until its top edge is 6rem (96px) away from the top of the viewport.

                            At that point, it will "stick" to the viewport, maintaining that top-24 position.

                            Once the element's parent container is scrolled out of view, the sticky effect stops.
                        
        }

        .top-24 {
                    top: 6rem; 
                    /* 24 * 0.25rem = 6rem 
                }


        .h-96 {
                height: 24rem; 
                    /* 96 * 0.25rem = 24rem 
            }

        .bg-gray-200 {
                        background-color: #e5e7eb; 
                            /* Gray 200 color from Tailwind's palette 
                    }

        .overflow-hidden{
                            overflow: hidden;
                                /* No scrollbars 
        }

        .mb-4 {
                margin-bottom: 1rem; 
                    /* 4 * 0.25rem = 1rem 
        }

        .max-w-full {
                        max-width: 100%;
                    }

        .h-auto {
                    height: auto; 
                        /*  Height of an element is automatically determined by its content. The browser calculates the height of the element based on the height of its children and the content inside it, plus any padding or borders. 
        }

        .transform {
                        transform: translate(); 
                            /* Placeholder for transformation; used to apply transforms like scale, rotate, etc. 
                    }

        .scale-125 {
                        transform: scale(1.25); 
                            /* Scales the element to 125% of its original size 
        }

        .justify-center{

                        display: flex; 
                            /* Required for justify-content to apply 

                        justify-content: center; 
                            /* Centers child elements horizontally 

                    }

       .z-2 {
                z-index: 2; 
                /* The z-index property controls the stack order of an element. 
                 Elements with a higher z-index are displayed in front of elements with a lower z-index, provided they are positioned (i.e., their position property is relative, absolute, fixed, or sticky). 
       }

       .mt-6 {
                margin-top: 1.5rem;
       }

       .pl-10 {
                padding-left: 2.5rem;
              }

        .w-full {
                width: 100%; 
                    /* Makes the element span the full width of its container.
            }

        .mt-16 {
                    margin-top: 4rem;
                        /* Add top margin 
                }

        .py-6 {     
                padding-top: 1.5rem;
                padding-bottom: 1.5rem;
                  /* Add vertical padding 
            }

        .px-4 {
                padding-left: 1rem;
                padding-right: 1rem;
                    /* Add horizontal padding 
             }

        @media (min-width: 768px) {

                /* Applies when the viewport width is at least the medium breakpoint (md), which is 768px by default in Tailwind CSS. 

                .md\:mt-0 {
                            margin-top: 0;
                        }

                .md\:pl-8 {
                            padding-left: 2rem;
                        }

                .md\:w-1\/4 {
                    width: 25%;
                        /* On medium screens and above, adjusts the width to 25% 
                        (1/4 of the parent container).
                }

                .md\:w-3\/4  {
                                width: 75%;
                            }

                 
                .md\:flex-row {
                    flex-direction: row;
                        /* Set flex-direction: row property to the element 
                            display elements in a single row (for medium & large screens) 

                }

                .md\:px-10 {
                    padding-left: 2.5rem; /* 40px 
                    padding-right: 2.5rem; /* 40px 
                        /* Add horizontal padding 
                }
            }


        .flex-col {
                    flex-direction: column;
                     /* Set flexbox direction to column 
                            display elements in a single column (for small screens) 
                }

     
        .bg-gray-100 { 
                        background-color: #f3f4f6; 
                            /* A very light gray color  
                    }

        .right-0 {
                    right: 0; 
                        /* Position element at the right edge of its containing block 
                }
    
        .py-2 { 
                padding-top: 0.5rem; 
                padding-bottom: 0.5rem;
                    /* Add vertical padding (top and bottom) of 0.5rem (8px) 
            }

        .fixed {
                position: fixed;
                /* This positions an element relative to the viewport, 
                   meaning it stays in the same position even as you scroll. 
            }

        .top-0 {
                top: 0;
                /* This places the element at the very top of its containing block or 
                    viewport (depending on the position).
        }

        .left-0 {
                left: 0;
                /* This aligns the element to the left edge 
                   of its containing block or viewport. 
        }

        .text-center {
                        text-align: center;
                            /* Centers text horizontally 
                    }

        .font-semibold {
                        font-weight: 600; 
                            /* This sets the font weight to a medium-bold level. 
                                It's slightly lighter than font-bold (font-weight: 700) but 
                                heavier than font-medium (font-weight: 500).
                    }

        .flex {
                    display: flex;
                        /* Make container a flexbox 
                }

        .items-center {
                        align-items: center;
                         /* Align child elements along the cross-axis 
                            (centered vertically (Y) for a horizontal flexbox). 
                    }

        .justify-between {
                            justify-content: space-between;
                                /* Distribute items with space in between 

                                    Behavior of justify-content: space-between;
                                    Child Elements Distribution:
                                        The first child is aligned to the start of the container.
                                        The last child is aligned to the end of the container.
                                        All other children are spaced evenly in between.
                                        No space is added at the beginning or end of the container.
                         }

        .px-10 {
                    padding-left: 2.5rem;
                    padding-right: 2.5rem;
                         Add horizontal padding 
                }

        .font-bold{
                    font-weight: 700;
                } */